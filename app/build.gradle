// Manifest version information!
def versionMajor = 0
def versionMinor = 0
def versionPatch = 1
def versionBuild = 0

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'dagger.hilt.android.plugin'
apply from: 'variants.gradle'

def preDexEnabled = "true" == System.getProperty("pre-dex", "true")

android {
  compileSdkVersion compileSdk
  defaultConfig {
    applicationId "com.mutualmobile.praxis"

    minSdkVersion minSdk
    targetSdkVersion targetSdk

    versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    vectorDrawables.useSupportLibrary = true
  }

  packagingOptions {
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
    exclude 'LICENSE.txt'
  }

  dexOptions {
    preDexLibraries = preDexEnabled
  }

  androidExtensions {
    experimental = true
  }

  dataBinding {
    enabled = true
  }

  lintOptions {
    lintConfig file('../analysis/lint/lint.xml')
    htmlOutput file("$project.buildDir/reports/lint/lint-reports.html")
    xmlOutput file("$project.buildDir/reports/lint/lint-reports.xml")
    abortOnError false
  }
}

// Required for annotation processing plugins like Dagger
kapt {
  generateStubs = true
}

dependencies {

  implementation project(':networkmodule')
  implementation project(':domain')
  implementation project(':data')
  implementation project(':usecases')

  // Kotlin
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"

  implementation 'androidx.legacy:legacy-support-v4:1.0.0'
  implementation 'androidx.appcompat:appcompat:1.1.0'
  implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta8'
  implementation 'com.google.android.material:material:1.3.0-alpha01'

  // Retrofit 2
  implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
  implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
  implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
  implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
  implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

  //Rx
  implementation "io.reactivex.rxjava2:rxjava:$rxVersion"
  implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
  implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'

  //Activity KTX for viewModels
  implementation "androidx.activity:activity-ktx:1.3.1"

  //Dagger Hilt
  implementation "com.google.dagger:hilt-android:2.36"
  implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
  kapt "com.google.dagger:hilt-android-compiler:2.36"
  kapt "androidx.hilt:hilt-compiler:1.0.0"

  //Navigation Component
  implementation "androidx.navigation:navigation-fragment-ktx:2.3.5"
  implementation "androidx.navigation:navigation-ui-ktx:2.3.5"

  // Timber
  implementation 'com.jakewharton.timber:timber:4.7.1'

  implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
  kapt "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"
  implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycleVersion"
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"

  // UI Testing
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

  // Unit Testing
  testImplementation 'junit:junit:4.12'
}

